local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Ghost Hub",
    SubTitle = "by Moon",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl 
})


local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "crown" }),
    Other = Window:AddTab({ Title = "Other", Icon = "backpack" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Players = game:GetService("Players")
local Options = Fluent.Options
local Plr = {}
local PlayerTP = nil


do
    
    Tabs.Main:AddSection("[ Teleport Players ]")
    
    local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
        Title = "Select Player",
        Values = Plr,
        Multi = false,
    })

    local function UpdatePlayerList()
        Plr = {}
        for _, v in pairs(Players:GetPlayers()) do
            table.insert(Plr, v.Name)
        end

        Dropdown:SetValues(Plr)

        if PlayerTP and table.find(Plr, PlayerTP) then
            Dropdown:SetValue(PlayerTP)
        else
            PlayerTP = nil
            Dropdown:SetValue(nil)
        end
    end

    Dropdown:OnChanged(function(Value)
        PlayerTP = Value
    end)

    UpdatePlayerList()

    Players.PlayerAdded:Connect(UpdatePlayerList)
    Players.PlayerRemoving:Connect(UpdatePlayerList)

    Tabs.Main:AddButton({
        Title = "Click To Teleport",
        Description = "",
        Callback = function()
            if PlayerTP and Players:FindFirstChild(PlayerTP) and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and
               Players[PlayerTP].Character and Players[PlayerTP].Character:FindFirstChild("HumanoidRootPart") then
                Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Players[PlayerTP].Character.HumanoidRootPart.CFrame
            else
                print("Invalid player or character not loaded")
            end
        end
    })
-----------------------
    Tabs.Main:AddSection("[ Fly ]")

    local Player = game.Players.LocalPlayer
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")

    local flyEnabled = false
    local flySpeed = 1

    local bg -- BodyGyro
    local bv -- BodyVelocity

    local ctrl = {f=0,b=0,l=0,r=0,u=0,d=0}
    local lastCtrl = {f=0,b=0,l=0,r=0,u=0,d=0}
    local maxSpeed = 50
    local speedVal = 0

    -- ฟังก์ชันเริ่มบิน
    local function startFly(speed)
        if flyEnabled then return end
        flyEnabled = true
        flySpeed = speed or 1

        local character = Player.Character or Player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")

        humanoid.PlatformStand = true

        bg = Instance.new("BodyGyro", rootPart)
        bg.P = 9e4
        bg.maxTorque = Vector3.new(9e9,9e9,9e9)
        bg.cframe = rootPart.CFrame

        bv = Instance.new("BodyVelocity", rootPart)
        bv.velocity = Vector3.new(0,0,0)
        bv.maxForce = Vector3.new(9e9,9e9,9e9)

        -- จับ event คีย์บอร์ดสำหรับควบคุมการบิน
        UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            if input.UserInputType == Enum.UserInputType.Keyboard then
                if input.KeyCode == Enum.KeyCode.W then ctrl.f = 1 end
                if input.KeyCode == Enum.KeyCode.S then ctrl.b = -1 end
                if input.KeyCode == Enum.KeyCode.A then ctrl.l = -1 end
                if input.KeyCode == Enum.KeyCode.D then ctrl.r = 1 end
                if input.KeyCode == Enum.KeyCode.Space then ctrl.u = 1 end
                if input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = -1 end
            end
        end)

        UserInputService.InputEnded:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            if input.UserInputType == Enum.UserInputType.Keyboard then
                if input.KeyCode == Enum.KeyCode.W then ctrl.f = 0 end
                if input.KeyCode == Enum.KeyCode.S then ctrl.b = 0 end
                if input.KeyCode == Enum.KeyCode.A then ctrl.l = 0 end
                if input.KeyCode == Enum.KeyCode.D then ctrl.r = 0 end
                if input.KeyCode == Enum.KeyCode.Space then ctrl.u = 0 end
                if input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = 0 end
            end
        end)

        -- อัปเดตการบินทุกเฟรม
        local connection
        connection = RunService.RenderStepped:Connect(function()
            if not flyEnabled then
                connection:Disconnect()
                return
            end

            local moveVector = Vector3.new(ctrl.l + ctrl.r, (ctrl.u or 0) + (ctrl.d or 0), ctrl.f + ctrl.b)
            if moveVector.Magnitude > 0 then
                speedVal = math.min(speedVal + 0.5 + (speedVal / maxSpeed), maxSpeed)
            else
                speedVal = math.max(speedVal - 1, 0)
            end

            if moveVector.Magnitude > 0 then
                lastCtrl = moveVector
            end

            local cameraCFrame = workspace.CurrentCamera.CFrame
            local velocity = ((cameraCFrame.LookVector * lastCtrl.Z) + ((cameraCFrame * CFrame.new(lastCtrl.X, lastCtrl.Y * 0.5, 0).p) - cameraCFrame.p)) * speedVal * flySpeed

            bv.velocity = velocity
            bg.cframe = cameraCFrame * CFrame.Angles(-math.rad(lastCtrl.Z * 50 * speedVal / maxSpeed), 0, 0)
        end)
    end

    -- ฟังก์ชันหยุดบิน
    local function stopFly()
        if not flyEnabled then return end
        flyEnabled = false

        local character = Player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")

            if humanoid then
                humanoid.PlatformStand = false
            end
            if bg then
                bg:Destroy()
                bg = nil
            end
            if bv then
                bv:Destroy()
                bv = nil
            end
        end
    end

-- ================= UI =================

    local flySpeedValue = 1
    local Toggle -- ประกาศก่อนเพื่อให้ callback ใช้งานได้

    -- สร้าง Toggle ก่อน
    Toggle = Tabs.Main:AddToggle("FlyToggle", {Title = "Fly", Default = false})

    Toggle:OnChanged(function()
        local enabled = Toggle.Value
        print("Toggle changed:", enabled)
        if enabled then
            startFly(flySpeedValue)
        else
            stopFly()
        end
    end)

    Toggle:SetValue(false)

    -- สร้าง Slider ทีหลัง
    local Slider = Tabs.Main:AddSlider("SpeedSlider", {
        Title = "Speed Fly",
        Description = "",
        Default = 1,
        Min = 1,
        Max = 50,
        Rounding = 1,
        Callback = function(value)
            flySpeedValue = value
            print("Slider was changed:", flySpeedValue)
            if Toggle.Value then
                stopFly()
                startFly(flySpeedValue)
            end
        end
    })

    Slider:OnChanged(function(value)
        flySpeedValue = value
        print("Slider changed:", flySpeedValue)
        if Toggle.Value then
            stopFly()
            startFly(flySpeedValue)
        end
    end)

    Tabs.Main:AddSection("[ WalkSpeed ]")

    local Player = game.Players.LocalPlayer

    local walkSpeedToggleEnabled = false
    local keepUpdatingWalkSpeed = false

    local WalkSpeedInput = Tabs.Main:AddInput("WalkSpeedInput", {
        Title = "WalkSpeed",
        Default = "16",
        Placeholder = "ใส่ตัวเลข WalkSpeed",
        Numeric = true,
        Finished = false,
        Callback = function(Value) end,
    })

    local WalkSpeedToggle = Tabs.Main:AddToggle("WalkSpeedToggle", {
        Title = "WalkSpeed Toggle",
        Default = false
    })

    local function setWalkSpeed(speed)
        local humanoid = Player.Character and Player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = speed
            --print("WalkSpeed set to:", speed)
        end
    end

    local function updateWalkSpeedLoop()
        spawn(function()
            while keepUpdatingWalkSpeed do
                local speed = tonumber(WalkSpeedInput.Value)
                if not speed or speed <= 0 then speed = 16 end
                setWalkSpeed(speed)
                wait(0.1)
            end
        end)
    end

    WalkSpeedToggle:OnChanged(function()
        walkSpeedToggleEnabled = WalkSpeedToggle.Value
        if walkSpeedToggleEnabled then
            keepUpdatingWalkSpeed = true
            updateWalkSpeedLoop()
        else
            keepUpdatingWalkSpeed = false
            setWalkSpeed(16)
        end
    end)

    WalkSpeedToggle:SetValue(false)

    Player.CharacterAdded:Connect(function()
        wait(1)
        if walkSpeedToggleEnabled then
            -- รีเซ็ต WalkSpeed หลัง respawn
            local speed = tonumber(WalkSpeedInput.Value)
            if not speed or speed <= 0 then speed = 16 end
            setWalkSpeed(speed)
        end
    end)

    WalkSpeedInput:OnChanged(function(newValue)
        if walkSpeedToggleEnabled then
            local speed = tonumber(newValue)
            if not speed or speed <= 0 then speed = 16 end
            setWalkSpeed(speed)
        end
    end)

------------------
    Tabs.Main:AddSection("[ JumpPower ]")

    local Player = game.Players.LocalPlayer

    local jumpPowerToggleEnabled = false
    local keepUpdatingJumpPower = false

    local JumpPowerInput = Tabs.Main:AddInput("JumpPowerInput", {
        Title = "JumpPower",
        Default = "50",  -- ค่าเริ่มต้น JumpPower ปกติคือ 50
        Placeholder = "ใส่ตัวเลข JumpPower",
        Numeric = true,
        Finished = false,
        Callback = function(Value) end,
    })

    local JumpPowerToggle = Tabs.Main:AddToggle("JumpPowerToggle", {
        Title = "JumpPower Toggle",
        Default = false
    })

    local function setJumpPower(power)
        local humanoid = Player.Character and Player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = power
            --print("JumpPower set to:", power)
        end
    end

    local function updateJumpPowerLoop()
        spawn(function()
            while keepUpdatingJumpPower do
                local power = tonumber(JumpPowerInput.Value)
                if not power or power <= 0 then power = 50 end
                setJumpPower(power)
                wait(0.1)
            end
        end)
    end

    JumpPowerToggle:OnChanged(function()
        jumpPowerToggleEnabled = JumpPowerToggle.Value
        if jumpPowerToggleEnabled then
            keepUpdatingJumpPower = true
            updateJumpPowerLoop()
        else
            keepUpdatingJumpPower = false
            setJumpPower(50)
        end
    end)

    JumpPowerToggle:SetValue(false)

    Player.CharacterAdded:Connect(function()
        wait(1)
        if jumpPowerToggleEnabled then
            local power = tonumber(JumpPowerInput.Value)
            if not power or power <= 0 then power = 50 end
            setJumpPower(power)
        end
    end)

    JumpPowerInput:OnChanged(function(newValue)
        if jumpPowerToggleEnabled then
            local power = tonumber(newValue)
            if not power or power <= 0 then power = 50 end
            setJumpPower(power)
        end
    end)

------------------------
    Tabs.Other:AddButton({
        Title = "Copy Position",
        Description = "",
        Callback = function()
            local player = game:GetService("Players").LocalPlayer
            local character = player and player.Character
            if not character then
                warn("Character not found")
                return
            end

            local hrp = character:FindFirstChild("HumanoidRootPart")
            if not hrp then
                warn("HumanoidRootPart not found")
                return
            end

            local pos = hrp.Position
            local posStr = string.format("Vector3.new(%f, %f, %f)", pos.X, pos.Y, pos.Z)

            if setclipboard then
                setclipboard(posStr)
                print("Copied Position to clipboard:")
                print(posStr)
            else
                warn("setclipboard function not available in this executor.")
            end
        end
    })

    Tabs.Other:AddButton({
        Title = "infinite Yield",
        Description = "",
        Callback = function()
            local success, err = pcall(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/GhostSobe/main/refs/heads/main/Inf.lua"))()
            end)
            if not success then
                warn("Failed to load script:", err)
            end
        end
    })
    Tabs.Other:AddButton({
    Title = "UNC",
    Description = "",
        Callback = function()
            local success, err = pcall(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/GhostSobe/main/refs/heads/main/UNC.lua"))()
            end)
            if not success then
                warn("Failed to load script:", err)
            end
        end
    })

end





SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
------------------------------------------

local TeleportService = game:GetService("TeleportService")
local placeId = 87039211657390 -- กำหนด PlaceId ถาวร

local jobIdValue = nil -- ตัวเก็บ Job Id ที่กรอก

local Input = Tabs.Settings:AddInput("JobIdInput", {
    Title = "Teleport Job Id",
    Default = "",
    Placeholder = "Enter Job Id",
    Numeric = false,
    Finished = false, -- ไม่ให้กด Enter teleport อัตโนมัติ
    Callback = function(Value)
        jobIdValue = Value -- เก็บค่าไว้
        print("Job Id updated to:", jobIdValue)
    end
})

Tabs.Settings:AddButton({
    Title = "Join Server",
    Description = "",
    Callback = function()
        if jobIdValue and jobIdValue ~= "" then
            print("Teleporting to Job Id:", jobIdValue)
            TeleportService:TeleportToPlaceInstance(placeId, jobIdValue)
        else
            print("กรุณากรอก Job Id ก่อนกด Join Server")
        end
    end
})

local function copyJobId()
    local jobId = game.JobId -- ตัวแปรเก็บ JobId ปัจจุบัน
    if jobId then
        setclipboard(jobId) -- คำสั่งคัดลอกไป clipboard (ใช้ได้กับ Executor ที่รองรับ)
        print("Copied JobId: " .. jobId)
    else
        print("ไม่พบ JobId")
    end
end
Tabs.Settings:AddButton({
    Title = "Copy Job Id",
    Description = "",
    Callback = function()
        copyJobId()
    end
})


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Toggle = Tabs.Settings:AddToggle("MyToggle", {Title = "Hide Name", Default = false})

-- ฟังก์ชันซ่อนชื่อแสดงของตัวละคร LocalPlayer
local function setNameVisibility(hide)
    local character = LocalPlayer.Character
    if character then
        -- หา BillboardGui ที่แสดงชื่อ (โดยทั่วไปอยู่ใน Head หรือชื่ออื่น)
        local head = character:FindFirstChild("Head")
        if head then
            for _, child in pairs(head:GetChildren()) do
                if child:IsA("BillboardGui") then
                    child.Enabled = not hide
                end
            end
        end

        -- หรือถ้าใช้ Humanoid.DisplayDistanceType ซ่อนชื่อด้วยก็ได้
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if hide then
                humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
            else
                humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Viewer -- หรือ Default
            end
        end
    end
end

Toggle:OnChanged(function()
    local hide = Toggle.Value
    print("Toggle changed:", hide)
    setNameVisibility(hide)
end)

Toggle:SetValue(false)

-- ถ้า Character เปลี่ยน (respawn) ให้ตั้งชื่อซ่อนตาม Toggle ปัจจุบันด้วย
LocalPlayer.CharacterAdded:Connect(function()
    setNameVisibility(Toggle.Value)
end)

------------------------------------------

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local isWindowVisible = true

-- สร้าง ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MyToggleUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = playerGui

--[[ สร้างกรอบ UI หลัก (ที่เราจะเปิด/ปิด) 
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 200)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
MainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
MainFrame.BackgroundTransparency = 0.5
MainFrame.Visible = false -- เริ่มซ่อน
MainFrame.Parent = ScreenGui
]]

-- สร้างปุ่มโลโก้เป็น ImageButton
local LogoButton = Instance.new("ImageButton")
LogoButton.Name = "LogoButton"
LogoButton.Size = UDim2.new(0, 60, 0, 60)
LogoButton.Position = UDim2.new(0, 45, 0, 40) -- มุมซ้ายบน
LogoButton.BackgroundTransparency = 1
LogoButton.Image = "rbxassetid://112944191767343" -- ใส่ Asset ID รูปโลโก้ที่ต้องการ
LogoButton.Parent = ScreenGui

-- ฟังก์ชันเปิด/ปิด UI
local function ToggleFluentWindow()
    if isWindowVisible then
        Window:Close() -- ปิด UI
    else
        Window:Open()  -- เปิด UI
    end
    isWindowVisible = not isWindowVisible
end

-- เชื่อมปุ่มกดกับฟังก์ชัน
LogoButton.MouseButton1Click:Connect(function()
    ToggleFluentWindow()
end)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()

